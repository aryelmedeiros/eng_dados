<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  ██████╗  ██████╗ █████╗
  ██╔══██╗██╔════╝██╔══██╗
  ██║  ██║██║     ███████║
  ██║  ██║██║     ██╔══██║
  ██████╔╝╚██████╗██║  ██║
  ╚═════╝  ╚═════╝╚═╝  ╚═╝
  DEPARTAMENTO DE ENGENHARIA DE COMPUTACAO E AUTOMACAO
  UNIVERSIDADE FEDERAL DO RIO GRANDE DO NORTE, NATAL/RN

  (C) 2023 CARLOS M D VIEGAS
  https://github.com/cmdviegas
-->

<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<configuration>

    <property>
        <name>hive.metastore.db.type</name>
        <value>postgres</value>
        <description>Type of database used by the metastore. Expects one of [derby, oracle, mysql, mssql, postgres].</description>
    </property>

    <property>
        <name>javax.jdo.option.ConnectionURL</name>
        <value>jdbc:postgresql://postgres-db:5432/hive_metastore?createDatabaseIfNotExist=true</value>
        <description>JDBC connect string for a JDBC metastore.</description>
    </property>

    <property>
        <name>javax.jdo.option.ConnectionDriverName</name>
        <value>org.postgresql.Driver</value>
        <description>Driver class name for a JDBC metastore.</description>
    </property>

    <property>
        <name>javax.jdo.option.ConnectionUserName</name>
        <value>postgres</value>
        <description>username to use against metastore database.</description>
    </property>

    <property>
        <name>javax.jdo.option.ConnectionPassword</name>
        <value>spark</value>
        <description>password to use against metastore database.</description>
    </property>

    <property>
        <name>hive.metastore.schema.verification</name>
        <value>false</value>
        <description>Enables or disables schema verification. When enabled, Hive metastore verifies that the schema version of the metastore database matches the Hive version.</description>
    </property>

    <property>
        <name>hive.server2.transport.mode</name>
        <value>binary</value>
        <description>Transport mode of HiveServer2. Expects one of [binary, http].</description>
    </property>

    <property>
        <name>hive.server2.webui.host</name>
        <value>0.0.0.0</value>
        <description>The host address the HiveServer2 WebUI will listen on.</description>
    </property>

    <property>
        <name>hive.server2.webui.port</name>
        <value>10002</value>
        <description>The port the HiveServer2 WebUI will listen on. This can beset to 0 or a negative integer to disable the web UI.</description>
    </property>

    <property>
        <name>hive.server2.enable.doAs</name>
        <value>false</value>
        <description>Setting this property to true will have HiveServer2 execute Hive operations as the user making the calls to it.</description>
    </property>

    <property>
        <name>hive.exec.stagingdir</name>
        <value>.hive-staging</value>
        <description>Directory name that will be created inside table locations in order to support HDFS encryption. This is replaces ${hive.exec.scratchdir} for query results with the exception of read-only tables. In all cases ${hive.exec.scratchdir} is still used for other temporary files, such as job plans.</description>
    </property>

    <property>
        <name>hive.exec.scratchdir</name>
        <value>/tmp/hive</value>
        <description>HDFS root scratch dir for Hive jobs. For each connecting user, an HDFS scratch dir: ${hive.exec.scratchdir}/username is created, with ${hive.scratch.dir.permission}.</description>
    </property>

    <property>
        <name>hive.scratch.dir.permission</name>
        <value>700</value>
        <description>The permission for the user specific scratch directories that get created.</description>
    </property>

    <property>
        <name>hive.execution.engine</name>
        <value>spark</value>
        <description>Chooses execution engine. Options are: mr (Map reduce, default), tez, spark. While MR remains the default engine for historical reasons, it is itself a historical engine and is deprecated in Hive 2 line. It may be removed without further warning. Expects one of [mr, tez, spark].</description>
    </property>

    <property>
        <name>hive.cli.print.current.db</name>
        <value>true</value>
        <description>Whether to include the current database in the Hive prompt.</description>
    </property>

</configuration>
